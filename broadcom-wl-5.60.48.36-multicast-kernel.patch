*** src/wl/sys/wl_linux.c.orig	2010-02-05 17:59:15.000000000 -0800
--- src/wl/sys/wl_linux.c	2010-07-28 18:25:36.982906000 -0700
***************
*** 1416,1422 ****
--- 1416,1427 ----
  _wl_set_multicast_list(struct net_device *dev)
  {
  	wl_info_t *wl;
+ #if LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 33)
  	struct dev_mc_list *mclist;
+ #else
+ 	struct netdev_hw_addr	*ha;
+ 	int num;
+ #endif
  	int i;
  
  	if (!dev)
***************
*** 1429,1437 ****
  
  	if (wl->pub->up) {
  		wl->pub->allmulti = (dev->flags & IFF_ALLMULTI)? TRUE: FALSE;
! 
! 		for (i = 0, mclist = dev->mc_list; mclist && (i < dev->mc_count);
! 			i++, mclist = mclist->next) {
  			if (i >= MAXMULTILIST) {
  				wl->pub->allmulti = TRUE;
  				i = 0;
--- 1434,1441 ----
  
  	if (wl->pub->up) {
  		wl->pub->allmulti = (dev->flags & IFF_ALLMULTI)? TRUE: FALSE;
! #if LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 33)
! 		for (i = 0, mclist = dev->mc_list; mclist && (i < dev->mc_count); i++, mclist = mclist->next) {
  			if (i >= MAXMULTILIST) {
  				wl->pub->allmulti = TRUE;
  				i = 0;
***************
*** 1439,1444 ****
--- 1443,1460 ----
  			}
  			wl->pub->multicast[i] = *((struct ether_addr*) mclist->dmi_addr);
  		}
+ #else
+ 		num = min_t(int, netdev_mc_count(dev), MAXMULTILIST);
+ 		i = 0;
+ 		netdev_for_each_mc_addr(ha, dev) {
+ 			if (i >= num) {
+ 				wl->pub->allmulti = TRUE;
+ 				i = 0;
+ 				break;
+ 			}
+ 			wl->pub->multicast[i] = *((struct ether_addr*) ha->addr);
+ 		}
+ #endif
  		wl->pub->nmulticast = i;
  		wlc_set(wl->wlc, WLC_SET_PROMISC, (dev->flags & IFF_PROMISC));
  	}
